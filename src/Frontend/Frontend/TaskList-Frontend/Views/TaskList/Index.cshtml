@page
@model IEnumerable<TaskViewModel>
@using TaskList_Frontend.Services.TaskListApi.Models.TaskList

<!DOCTYPE html>
<html>
<head>
    <title>Список задач</title>
</head>
<body>
    <h1>Список задач</h1>

    @if (!Model.Any())
    {
        <p>Список задач пуст</p>
        <button onclick="location.href='/Task/Create'">Создать первую задачу</button>
    }
    else
    {
        <table border="1">
            <thead>
                <tr>
                    <th>ID задачи</th>
                    <th>Текст задачи</th>
                    <th>Дата создания</th>
                    <th>Действия</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var task in Model)
                {
                    <tr>
                        <td>@task.id</td>
                        <td>@task.text</td>
                        <td>@task.created</td>
                        <td>
                            <button onclick="location.href='/Task/Edit/@task.id'">Редактировать</button>
                            <button onclick="confirmDelete(@task.id)">Удалить</button>
                            <button onclick="archiveTask(@task.id)">Архивировать</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <button onclick="location.href='/Task/Create'">Создать новую задачу</button>
    }

    <script>
        function confirmDelete(id) {
            if (confirm('Вы уверены, что хотите удалить задачу?')) {
                // Здесь можно отправить запрос на сервер для удаления задачи по id
                // Пример: fetch(`/Task/Delete/${id}`, { method: 'DELETE' });
            }
        }

        function archiveTask(id) {
            // Здесь можно отправить запрос на сервер для архивирования задачи по id
            // Пример: fetch(`/Task/Archive/${id}`, { method: 'POST' });
        }
    </script>
</body>
</html>
